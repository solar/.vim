snippet Runnable
abbr    Android new Runnable() {
	new Runnable() {
		@Override
		public void run() {
			${0}
		}
	}

snippet Listener
abbr    Android new X.OnYListener() {
	new ${1}On${2:Click}Listener() {
		@Override
		public ${3:void} on$2(${4}) {
			${0}
		}
	}

snippet ServiceConnection
abbr    Android new ServiceConnection()
	new ServiceConnection() {
		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			${1:Binder} binder = ()service;
			${0}
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
		}
	}

snippet     AlertDialog
abbr        Android AlertDialog
	new AlertDialog.Builder(${1:this})
		.setTitle(R.string.${2:title})
		.setMessage(R.string.${3:message})
		.setPositiveButton(R.string.${4:yes}, new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int which) {
				${0}
			}
		})
		.setNegativeButton(R.string.${5:no}, new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int which) {
			}
		})
		.create()
		.show();

snippet     AsyncTask
abbr        Android Class extends AsyncTask
prev_word   '^'
	private class ${1:Task} extends AsyncTask<${2:Void}, ${3:Void}, ${4:Boolean}> {
		/**
		 * プログレスダイアログ
		 */
		private ProgressDialog dialog;
		
		/**
		 * Constructs a new instance.
		 */
		public () {
		}
		
		/**
		 * {@inheritDoc}
		 * 
		 * @see AsyncTask#doInBackground($2...)
		 */
		protected $4 doInBackground($2... args) {
			return null;
		}
		
		/**
		 * {@inheritDoc}
		 * 
		 * @see AsyncTask#onPreExecute()
		 */
		protected void onPreExecute() {
			// プログレスダイアログの表示
			dialog = new ProgressDialog(${5:Activity}.this);
			dialog.setTitle(getString(R.string.${6:task_progress_title}));
			dialog.setMessage(getString(R.string.${7:task_progress_message}));
			dialog.setProgressStyle(ProgressDialog.STYLE_${8:SPINNER|HORIZONTALLY});
			dialog.setCancelable(true);
			dialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
				@Override
				public void onCancel(DialogInterface dialog) {
					.this.cancel(true);
				}
			});
			dialog.show();
			return;
		}
		
		/**
		 * {@inheritDoc}
		 * 
		 * @see AsyncTask#onPostExecute($4)
		 */
		protected void onPostExecute($4 result) {
			if (dialog != null) {
				dialog.dismiss();
				dialog = null;
			}
			if (result != null) {
				// Succeeded
			} else {
				// Failed
				new AlertDialog.Builder($5.this)
					.setTitle(R.string.${9:task_failed_title})
					.setMessage(R.string.${10:task_failed_message})
					.setNeutralButton(R.string.close, null)
					.create()
					.show();
			}
		}
		
		/**
		 * {@inheritDoc}
		 *
		 * @see AsyncTask#onCancelled()
		 */
		protected void onCancelled() {
			if (dialog != null) {
				dialog.dismiss();
				dialog = null;
			}
		}
	}

snippet     PreferenceActivity
abbr        Android PreferenceActivity
prev_word   '^'
	public class ${1:Pref} extends PreferenceActivity {

		/**
		 * {@inheritDoc}
		 * @see PreferenceActivity#onCreate(Bundle)
		 */
		protected void onCreate(Bundle savedInstanceState) {
			super.onCreate(savedInstanceState);
			addPreferencesFromResource(R.xml.${2:pref});
		}
	}

snippet     onCreateOptionMenu
abbr        Android Activity#onCreateOptionMenu(Menu)
	/**
	 * {@inheritDoc}
	 * @see Activity#onCreateOptionsMenu(Menu)
	 */
	public boolean onCreateOptionsMenu(Menu menu) {
		super.onCreateOptionsMenu(menu);
		getMenuInflater().inflate(R.menu.${1}, menu);
		return true;
	}

snippet     onMenuItemSelected
abbr        Android Activity#onMenuItemSelected(int, MenuItem)
	/**
	 * {@inheritDoc}
	 * @see Activity#onMenuItemSelected(int,MenuItem)
	 */
	public boolean onMenuItemSelected(int featureId, MenuItem item) {
		switch (item.getItemId()) {
		}
		return true;
	}

snippet     WebViewClient
abbr        Android new WebViewClient()
	new WebViewClient() {

		/**
		 * {@inheritDoc}
		 * @see WebViewClient#onPageStarted(WebView,String,Bitmap)
		 */
		@Override
		public void onPageStarted(WebView view, String url, Bitmap icon) {
			super.onPageStarted(view, url, icon);
		}

		/**
		 * {@inheritDoc}
		 * @see WebViewClient#onPageFinished(WebView,String)
		 */
		@Override
		public void onPageFinished(WebView view, String url) {
			super.onPageFinished(view, url);
		}

		/**
		 * {@inheritDoc}
		 * @see WebViewClient#onReceivedError(WebView,int,String,String)
		 */
		@Override
		public void onReceivedError(WebView view, int errorCode,
				String description, String failingUrl) {
			super.onReceivedError(view, errorCode, description, failingUrl);
		}
	}

snippet     CallbackListenerMixi
abbr        mixi Android SDK CallbackListener
	new CallbackListener() {
		@Override
		public void onComplete(Bundle values) {
			Log.v("${1}", "CallbackListener#onComplete()");
			Log.v("", "response:" + values.getString("response"));
		}

		@Override
		public void onCancel() {
			Log.v("", "CallbackListener#onCancel()");
		}

		@Override
		public void onFatal(ErrorInfo e) {
			Log.v("", "CallbackListener#onFatal()");
			Log.v("", MixiHelper.dumpErrorInfo(e));
		}

		@Override
		public void onError(ErrorInfo e) {
			Log.v("", "CallbackListener#onError()");
			Log.v("", MixiHelper.dumpErrorInfo(e));
		}
	}${0}

snippet     activity
abbr        Android Activity
prev_word   '^'
	public class ${1}Activity extends Activity {

		/**
		 * {@inheritDoc}
		 * @see Activity#onCreate(Bundle)
		 */
		protected void onCreate(Bundle savedInstanceState) {
			super.onCreate(savedInstanceState);
			setContentView(R.layout.${2:layout});
		}

		/**
		 * {@inheritDoc}
		 * @see Activity#onResume()
		 */
		protected void onResume() {
			super.onResume();
		}

		/**
		 * {@inheritDoc}
		 * @see Activity#onPause()
		 */
		protected void onPause() {
			super.onPause();
		}

		/**
		 * {@inheritDoc}
		 * @see Activity#onDestroy()
		 */
		protected void onDestroy() {
			super.onDestroy();
		}
	}

snippet     CallbackListenerPochi
abbr        pochi Android SDK CallbackListener
	new Pochi.CallbackListener() {
		@Override
		public void onComplete(JSONObject json) {
			Logger.log("CallbackListener#onComplete()");
			Logger.log("json:" + json.toString());
		}

		@Override
		public void onFatal(ErrorInfo e) {
			Logger.log("CallbackListener#onFatal()");
			Logger.log(e.toString());
		}

		@Override
		public void onError(int code, String message) {
			Logger.log("CallbackListener#onError()");
			Logger.log("" + code + ":" + message);
		}
	}${0}

snippet     fragment
abbr        Android Fragment
prev_word   '^'
	public class ${1:Fragment} extends Fragment {

		private Activity mActivity = null;

		/**
		 * {@inheritDoc}
		 * @see Fragment#onCreate(Bundle)
		 */
		public void onCreate(Bundle savedInstanceState) {
			super.onCreate(savedInstanceState);
			Logger.log("[$1] onCreate()");
		}

		/**
		 * {@inheritDoc}
		 * @see Fragment#onCreateView(LayoutInflater,ViewGroup,Bundle)
		 */
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			Logger.log("[$1] onCreateView()");
			View layout = inflater.inflate(R.layout.${2}, container, false);
			return layout;
		}

		/**
		 * {@inheritDoc}
		 * @see Fragment#onActivityCreated(Bundle)
		 */
		public void onActivityCreated(Bundle savedInstanceState) {
			super.onActivityCreated(savedInstanceState);
			Logger.log("[$1] onActivityCreated()");

			mActivity = getActivity();
		}

		/**
		 * {@inheritDoc}
		 * @see Fragment#onResume()
		 */
		public void onResume() {
			super.onResume();
			Logger.log("[$1] onResume()");
		}

		/**
		 * {@inheritDoc}
		 * @see Fragment#onPause()
		 */
		public void onPause() {
			super.onPause();
			Logger.log("[$1] onPause()");
		}
		/**
		 * {@inheritDoc}
		 * @see Fragment#onDestroy()
		 */
		public void onDestroy() {
			Logger.log("[$1] onDestroy()");
			super.onDestroy();
		}
	}
